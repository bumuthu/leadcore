service: lc

provider:
  name: aws
  runtime: nodejs14.x
  region: us-east-2
  stage: dev
  lambdaHashingVersion: '20201221'

plugins:
  - serverless-webpack

package:
  include:
    - src/**/*
    - reference-data/*
  exclude:
    - node_modules/**/*
    - .serverless/**/*
    - .vscode/**/*

functions:
  ### Reference Data
  get-refdata:
    handler: src/controllers/refdata-controller.getRefData
    events:
      - http:
          method: get
          path: api/v1/refdata
          cors: true

  reset-refdata:
    handler: src/controllers/refdata-controller.resetRefData
    events:
      - http:
          method: get
          path: api/v1/refdata/reset
          cors: true

  ### Auth
  get-access-token:
    handler: src/controllers/auth-controller.getAccessToken
    events:
      - http:
          method: get
          path: api/v1/auth/linkedinAccessToken
          cors: true

  sign-in:
    handler: src/controllers/auth-controller.signIn
    events:
      - http:
          method: post
          path: api/v1/auth/login

  sign-up:
    handler: src/controllers/auth-controller.signUp
    events:
      - http:
          method: post
          path: api/v1/auth/register

  ### User
  # get-user:
  #   handler: src/controllers/user-controller.getUserById
  #   events:
  #     - http:
  #         method: get
  #         path: api/v1/user/{userId}
  #         cors: true

  get-user:
    handler: src/controllers/user-controller.getUserByToken
    events:
      - http:
          method: get
          path: api/v1/user
          cors: true
          
  # update-user:
  #   handler: src/controllers/user-controller.updateUserById
  #   events:
  #     - http:
  #         method: put
  #         path: api/v1/user/{userId}
  #         cors: true

  update-user:
    handler: src/controllers/user-controller.updateUserByToken
    events:
      - http:
          method: put
          path: api/v1/user
          cors: true

  # create-user:
  #   handler: src/controllers/user-controller.createUser
  #   events:
  #     - http:
  #         method: post
  #         path: api/v1/user/new
  #         cors: true

  ### Team
  get-team:
    handler: src/controllers/team-controller.getTeamById
    events:
      - http:
          method: get
          path: api/v1/team/{teamId}
          cors: true

  update-team:
    handler: src/controllers/team-controller.updateTeamById
    events:
      - http:
          method: put
          path: api/v1/team/{teamId}
          cors: true

  create-team:
    handler: src/controllers/team-controller.createTeam
    events:
      - http:
          method: post
          path: api/v1/team/new
          cors: true

  ### Customer
  get-customer: 
    handler: src/controllers/customer-controller.getCustomerById
    events:
      - http:
          method: get
          path: api/v1/customer/single/{customerId}
          cors: true

  update-customer: 
    handler: src/controllers/customer-controller.updateCustomerById
    events:
      - http:
          method: put
          path: api/v1/customer/single/{customerId}
          cors: true

  create-customer: 
    handler: src/controllers/customer-controller.createCustomer
    events:
      - http:
          method: post
          path: api/v1/customer/single/new
          cors: true

  get-customers-list: 
    handler: src/controllers/customer-controller.getCustomersListByIds
    events:
      - http:
          method: get
          path: api/v1/customer/list/{customerIds}
          cors: true

  create-customers-list: 
    handler: src/controllers/customer-controller.createCustomersList
    events:
      - http:
          method: post
          path: api/v1/customer/list/new
          cors: true

  ### Campaign
  get-campaign:
    handler: src/controllers/campaign-controller.getCampaignById
    events:
      - http:
          method: get
          path: api/v1/campaign/{campaignId}
          cors: true

  update-campaign:
    handler: src/controllers/campaign-controller.updateCampaignById
    events:
      - http:
          method: put
          path: api/v1/campaign/{campaignId}
          cors: true

  post-campaign:
    handler: src/controllers/campaign-controller.createCampaign
    events:
      - http:
          method: post
          path: api/v1/campaign/new
          cors: true

  change-pipeline-stage:
    handler: src/controllers/campaign-controller.changePipelineStage
    events:
      - http:
          method: put
          path: api/v1/campaign/pipeline/stageChange
          cors: true

custom:
  webpack:
    webpackConfig: ./webpack.config.js
    includeModules: true

  